;*******************************************************
; Copyright (c) 2006-2017 Arm Limited (or its affiliates). All rights reserved.
; Use, modification and redistribution of this file is subject to your possession of a
; valid End User License Agreement for the Arm Product of which these examples are part of 
; and your compliance with all applicable terms and conditions of such licence agreement.
;*******************************************************

; Scatter-file for Cortex-R4 bare-metal example
; Addresses suitable for Cortex-R4 Core Tile (EB-R4) with SRAM at 0x0
; Change these addresses to match the memory map your own target

LOAD 0x0
{
    CODE +0 0x8000
    {
        startup.o (VECTORS, +First)         ; Startup code
        * (InRoot$$Sections)                ; All library sections that must be in a root region
        * (+RO)                             ; Application code, including C library
    }

    DATA 0x8000 0x4000
    {
        * (+RW,+ZI)                         ; All RW and ZI Data
    }

    ARM_LIB_STACKHEAP 0xC000 EMPTY 0x4000   ; Stack and heap
    {
    }
}

; The Cortex-R4F Core Tile also has
; 64K ATCM  from 0xE0FD0000 to 0xE0FDFFFF
; 64K BTCM0 from 0xE0FE0000 to 0xE0FEFFFF
; 64K BTCM1 from 0xE0FF0000 to 0xE0FFFFFF
;
; Use these regions to place code and/or data in TCM:
;    ATCM  0xE0FD0000 0x10000 { ... }
;    BTCM0 0xE0FE0000 0x10000 { ... }
;    BTCM1 0xE0FF0000 0x10000 { ... }
;
; Scatterloading can be used to copy code and/or data into the TCMs
